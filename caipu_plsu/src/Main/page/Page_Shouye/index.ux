<import name="caipu_swiper" src="./component/component_swiper.ux"></import>
<import name="fastentry" src="./component/c_fastEntry.ux"></import>
<import name="multi" src="./component/c_list_multi.ux"></import>
<import name="theme_recommend" src="./component/c_item_container_swiper.ux"></import>
<import name="single_every" src="./component/c_list_single.ux"></import>
<!-- <import name="recommandlist" src="./component/c_recommandList.ux"></import> -->
<import name="end_line" src="../../component/end_line.ux"></import>
<import name="wanka_ad_view" src="../../../WankaAdSDK/dist/Ad-component/view.ux"></import>
<import name="loading" src="../../component/loading.ux"></import>
<import name="t_link_ad" src="../../component/t_link_ad.ux"></import>
 
  
<template>
	<!-- template里只能有一个根节点 -->
	<div class="menu-main">
		<!-- loading 组件 -->
		<loading if="showLoading" ></loading>
		<!-- 轮播图 -->
		<div class="menu-main-two">
			<caipu_swiper swiperdata={{swiperdata}}></caipu_swiper>
		</div>
		<!-- 快捷方式入口 -->
		<div class="menu-main-three">
			<fastentry list="{{fastentrylist}}"></fastentry>
		</div>

		<!-- 为你推荐 -->
		<div class="menu-main-five">
			<multi banner="{{ recommend }}" list="{{ recommend.list }}" num="{{3}}"></multi>
		</div>

		<!-- 广告位 -->
		<div class="wanka-ad" if="{{ showAd }}" >			
			
			<wanka_ad_view
				type="native"
				adslot_id="{{ nativeId }}"
				width="{{700}}"
				height="{{320}}"
				@ad-error="onadError"
                @ad-closed="onadClosed"
			></wanka_ad_view>
		</div>
		<!-- <div class="tb_link_ad" elif >
			<t_link_ad else ad_info="{{ tbAd }}" ></t_link_ad>
		</div> -->

		<!-- 今日热门 -->
		<div class="menu-main-four">
			<single_every list="{{curSeasonMenu}}"></single_every>
		</div>

		<!-- 专题推荐 -->
		<div class="menu-main-seven">
			<theme_recommend list="{{themeRecommendData.subjectlist}}" banner="{{themeRecommendData.banner}}"></theme_recommend>
		</div>

		<end_line></end_line>

	</div>
</template>

<style>
.menu-main {
  flex-direction: column;
  justify-content: center;
  align-content: center;
  align-items: center;
  padding-bottom: 64px;
}

.menu-main-one {
  width: 683px;
  margin: 17px 34px 36px 34px;
}
.menu-main-two{
	width: 100%;
}
.wanka-ad{
  	width: 683px;
	height: 450px;
	justify-content: center;
	/* margin: 50px 34px 0 34px; */
}
.tb_link_ad{
  	width: 683px;
	height: 450px;
	justify-content: center;	
	background-color: rgb(233, 229, 229);
	border-radius: 16px;
}
.wanka-ad-img{
	border-radius: 16px;
}

.menu-main-four {
  margin-top: 50px;
}

.menu-main-five {
  margin-top: 50px;
}

.menu-main-six {
  margin-top: 50px;
}

.menu-main-seven {
  margin-top: 50px;
}

.menu-main-eight {
  margin: 50px 0px;
}
.boittom-line{
	margin-top: 50px;
}
.boittom-line-text{
	color: #ccc;
}
</style>

<script>
let baidu = 'https://www.baidu.com'
import api from '../../../api/api.js';
import category from '../../../Common/static/data.js';
import utli from '../../../util.js';

export default {
	props: [],
	data: {
		showLoading: true,
		//搜索框数据
		searchbar: './page/Page_Shouye/img/c_search_search.png',
		//轮播图
		swiperdata:[
			// { src: 'http://api.jisuapi.com/recipe/upload/20160720/113939_31411.jpg' },
		],

		//快捷入口数据 
		fastentrylist:[
			{
				'icon': './page/Page_Shouye/img/zaocan.png',
				'title': '早餐',
				'src': 'city',
				'isNew': false,
				classid: 562
			},
			{
				'icon': './page/Page_Shouye/img/wucan.png',
				'title': '午餐',
				'src': 'paihang',
				'isNew': false,
				classid: 563
			},
			{
				'icon': './page/Page_Shouye/img/wancan.png',
				'title': '晚餐',
				'src': 'tejia',
				'isNew': false,
				classid: 565
			}
		],
		
		//今日热门
		curSeasonMenu:
			{
				title: '今日热门',
				subtitle: '', // 更多
				arrow: './page/Page_Shouye/img/arrow.png',
				list: [
					{
						pic: '',
						name: '',
						content: '',
						author: '',
						clazz: []
					}
				]
			},

		//为你推荐
		recommend:{
				title: '为你推荐',
				link: '更多',
				arrow_uri: './page/Page_Shouye/img/arrow.png',
				classid: '597', // 年夜饭
				list:[]
		},

		//专题推荐
		themeRecommendData:{   
			banner:{
				title: '专题推荐',
				// link: '更多',
				// uri: './page/Page_Shouye/img/arrow.png'
			},
			subjectlist:[],
		},	
		showAd: false,
		nativeId:'', 
		tbAd: '',	// 淘口令数据

	},

	onInit() {

		this.nativeId = this.$app.$def.adInfo.nativeId;
		this.$page.setTitleBar({
			menu: false
		});
		this.themeRecommendData.subjectlist = this.randomFirstMenuClass( category , 3 );
		
		// 淘口令广告
		api.getTaobaoAd({}).then(res => {

			let data = JSON.parse(res);
			let result = data.result || {};
			this.tbAd = result;

		})
	
	},
	onReady() {
		
		let hour = new Date().getHours();
		let start = utli.randomNum(3);
		let comClassid;

		if( hour > 6 && hour < 10 ){
			comClassid = this.fastentrylist[0].classid;
		}else if( hour >= 10 && hour < 16 ){
			comClassid = this.fastentrylist[1].classid;
		}else{
			comClassid = this.fastentrylist[2].classid;
		}	

		api.getMenusByType({
			classid: comClassid,
			start: start*20, 
			num: 20
		}).then(data => {
		
			let menuData = JSON.parse(data);

			if (menuData.result) {

				// 轮播图
				let startIndex = Math.floor((Math.random()*9));  // 起始位置
				this.swiperdata = menuData.result.list.map(el => {
					return el
				}).slice(startIndex , startIndex+3 );
				// 今日热门
				this.curSeasonMenu.list = this.computedSeasonData( menuData.result.list );
				// 为你推荐
				this.recommend.list = this.computedRecommendList( menuData.result.list );	
			}
			this.showLoading = false;
	
		}).catch( err =>{
			this.showLoading = false;
		})

		api.getWankaAdState({}).then(res=>{
			let data = JSON.parse(res);
			let result = data.result || {};
			setTimeout(() => {
				// 广告状态
				this.showAd = result.show || false;	
			}, 0);			
		})		
	},
	// 格式化今日推荐数据
	computedSeasonData(list=[]){
		if(list.length == 0) return []
		let data = list[0];
		let menuClazz = data.tag.split(',').slice(0,2);
		let computedData = Object.assign({},data,{ menuClazz });
		return [ computedData ]
	},

	// 随机菜谱推荐
	computedRecommendList(list=[]){

		return list.reverse().slice(0,3)
	},

	// 随机一级分类推荐
	randomFirstMenuClass( menuCategory , len=0 ){
		let MaxStart = menuCategory.length - len + 1;
		let startIndex = Math.floor( (Math.random() * MaxStart) );  // 随机起始位置
		return menuCategory.slice(startIndex , startIndex + len );					 
	},
	// 随机二级分类推荐
	randomSecondMenuClass( menuCategory ){
		let firstClassList = this.randomFirstMenuClass( menuCategory , 1 )[0].list;

		let len = firstClassList.length;
		let idx = Math.floor((Math.random()*len));

		return firstClassList[ idx ]
	},
	
	onadError( args ){
		console.log(`onadError >>>>>` , args);
		
		this.showAd = false;
	},

	onadClosed(){
		this.showAd = false;
	}

}
</script>