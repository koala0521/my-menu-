<!-- <import name='shoucang_list' src='./component/c_shujia_list.ux'></import> -->

<import name="menu_list" src="../../../Main/component/c_menu_list.ux"></import>
 
<template>
	<!-- template里只能有一个根节点 -->
	<div class="shujia-box">
		
		<div class="shujia-box-bottom">
			<text class="shujia-title" >我的收藏</text>
			<menu_list menu-list="{{ favorite_data }}" show-wanka-ad="{{ false }}" ></menu_list>
		</div>
	</div>
</template>

<style>
.shujia-box {
  flex-direction: column;
  justify-content: flex-start;
  align-content: center;
  align-items: center;
  /* padding: 32px 0; */
}

.shujia-box-top {
  width: 683px;
  margin: 17px 34px 36px 34px;
}

.shujia-box-bottom {
  width: 698px;
  margin: 0px 26px 0 26px;
  flex-direction: column;
}
.shujia-title{
	font-weight: bold;
	font-size: 34px;
	padding-bottom: 64px;
	padding-top: 16px;
	text-align: center;
}


</style>

<script>
import api from '../../../api/api.js';
import util from '../../../util.js';

module.exports = {
	props: [
		'favorite_data',
	],
	data: {
		// 书架列表数据
		list: [
			// {
			// 	"image": "./page/Page_Shoucang/TO_DELETE/1.png",
			// 	"name": "one",
			// 	"selectImage": false,
			// 	"bookType1": "no",
			// 	"bookType2": "novel"
			// }
		],
		checkedList: [
			// { i: 0, color: '#878787', image: './page/Page_Shoucang/img/delete.png', title: '删除' },
			// { i: 2, color: '#878787', image: './page/Page_Shoucang/img/share.png', title: '分享' },
			// { i: 3, color: '#878787', image: './page/Page_Shoucang/img/all.png', title: '全选' }
		],
		img: {
			closeImage: "./page/Page_Shoucang/img/icon_close.png",
			noSelect: "./page/Page_Shoucang/img/no_select.png",
			select: "./page/Page_Shoucang/img/select.png",
			type1: "./page/Page_Shoucang/img/image1.png",
			type2: "./page/Page_Shoucang/img/headphone.png",
			shujiaLine: "./page/Page_Shoucang/img/shujia.png"
		},

		//搜索框数据
		searchbar: "./page/Page_Shoucang/img/c_search_search.png"
	},

	onInit() {
		this.$page.setTitleBar({
			//titlebar的状态在manifest.json中display设置的
			menu: false
		});
		this.$watch('favorite_data','updateFoo');

		console.log(`favorite_data >>>>>>>>>>>>` ,  this.favorite_data );
		
		// util.readFile( util.filePath ).then( res =>{
		// 	let text = res.data.text;
		// 	if(!text) return
		// 	console.log(`text >>>>>>>>` , JSON.parse( text ) );
		// 	this.list = JSON.parse( text ) || [];						
		// }).catch( err =>{
		// 	console.log(` read fail >>>>>>>>>` , err);			
		// })
	},
	updateFoo(newVal){
		console.log(`newVal >>>>>>>>>>>`, newVal);
		
	}
}
</script>