<template>
	<div class="single-container">
		<list class="single-list" id="list">
			<list-item type="item" class="liet-item" >
				<div onclick="toList($item)" for="{{ computedData }}"  class="single-product" >
					<text class="single-title">{{$item.name}}</text>
					<text class="line"></text>
				</div>
			</list-item>
		</list>
	</div>
</template>

<style>
	.single-container {
		margin: 20px 16px 0px 16px;
		flex-direction: row;
	}

	.single-list {
		border-color: #0000ff;
		justify-content: space-between;
		flex-wrap: wrap;
	}
	.liet-item{
		flex: 1;
		flex-wrap: wrap;
		flex-direction: row;
	}

	.single-product {
		flex-direction: column;
		flex-wrap: wrap;
		width: 30%;
		align-self: center;
	}

	.single-image {
		width: 217px;
		height: 217px;
		margin: 17px 33px 11px 0px;
		border-radius: 8px;
	}

	.single-title {
		color: #000000;
		font-size: 31.3px;
		line-height: 40.6px;
		margin: 24px 0px;
		padding-right: 6px;
	}

	.single-brief {
		lines: 1;
		text-overflow: ellipsis;
		color: #1a1a1a;
		opacity: 0.5;
		font-size: 27.1px;
		line-height: 34.9px;
		margin-bottom: 42px;
	}

	.single-bottom {
		justify-content: space-between;
	}

	.single-author {
		color: #1a1a1a;
		opacity: 0.5;
		font-size: 27.1px;
		align-self: center;
	}

	.single-div-clazz {
		justify-content: flex-end;
	}

	.single-clazz {
		width: 30%;
		text-align: center;
		color: #000000;
		opacity: 0.5;
		font-size: 16.7px;
		line-height: 25px;
		background-color: rgba(118, 118, 118, 0.1);
		border-radius: 4.2px;
		align-self: center;
		margin-left: 10px;
		margin-top: 6px;
	}

	.line {
		width: 100%;
		height: 1px;
		background-color: rgba(24, 34, 51, 0.2);
		margin-top: 40px;
	}
</style>

<script>
	import router from '@system.router';
	export default {
		data: {
			props: [
				'list',
			],
			computedData:[]
		},

		onInit() {	

			this.computedData = this.list && this.list.slice(0 , 21);
			// 监听数据变化
      		this.$watch('list', 'watchListChange')
			
		},
		toList(item) {
			//跳转列表页
			router.push({
				uri: '/Page_List',
				params: { 
					classid: item.classid,
					title: item.name 
				}
			})
		},
		watchListChange(newval,oldval){
			this.computedData = newval.slice(0 , 50)
		}
	}
</script>