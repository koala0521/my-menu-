<import name="single" src="../../Page_Home/component/c_news_single.ux"></import>
 
<!-- 绕口令 -->
<template>
	<!-- template里只能有一个根节点 -->
	<div class="recommend_container">

        <list onscrollbottom="scrollbottom" class="list" id="list">
            <block for="{{ list }}">
                <list-item type="tongue" class="tongue-twister" >
                    <div>
                        <image class="item-img" src="/Common/23.png"></image>
                        <text class="title" >{{ $item.title }} </text>
                    </div>
                    <text class="content" >{{ $item.content }}</text>
                </list-item>
            </block>
            <list-item type="loadStatus" class="load-status"  if="{{ hasMoreData }}" >
                <progress type="circular"></progress>
                <text show="{{ hasMoreData }}">加载更多...</text>
                <text show="{{ !hasMoreData }}">没有更多了~~</text>
            </list-item>
        </list>        

		<!-- <refresh refreshing="{{ isRefreshing }}" type="pulldown" @refresh="refreshData">
		</refresh> -->
	</div>
</template>


<script>
import util from '../../util.js';
import api from '../../api/api.js';
import prompt from '@system.prompt';

export default {
    data: {
        list: [],
		page: 1,
		maxPage: 999,
		pageSize: 20,
		hasMoreData: true,
		isLoadingData: false        
    },
	onInit() {
		this.$on('clk_home_btn_on_tab_2', this.backTop);
		this.getTongueTeister();
	},
	backTop(evt){
		util.scrollToTop( this.$element('list') );
		evt.stop();

	},

	getTongueTeister(){

		api.getTongueTwisterList({
			page: this.page
		}).then(res=>{

			if( res.showapi_res_code !== 0 || !res.showapi_res_body || res.showapi_res_body.ret_code != 0 ){
				prompt.showToast({
					message: '请求失败请稍后重试~~'
				})
				return
			}		
			this.list = this.list.concat(res.showapi_res_body.contentlist || []);
			this.maxPage = res.showapi_res_body.allPages;
		}).catch(err=>{
			console.log(`请求失败了 >>>>>>>>` , err);
		})
	},

	/* 滑动到底部时加载更多 */
	scrollbottom() {
		this.page++;

		if ( this.page >= this.maxPage ){
			this.hasMoreData = false;		
			return
		}
		if (!this.isLoadingData) {
			this.getTongueTeister();
		}
	},   
}
</script>


<style>
.recommend_container {
  flex-direction: column;
  align-items: flex-start;
  width: 100%;
  padding: 0 32px;
  /* margin-top: 6px; */
}

.list{
    flex: 1;
}

.tongue-twister{
    flex-direction: column;
    padding: 16px 0;
    border-bottom: 6px solid #ececec;
}
.title{
    font-size: 32px;
    font-weight: bold;
}
.item-img{
    width: 64px;
    margin-right: 16px;
    resize-mode: contain;
    object-fit: contain;
}
.content{
    font-size: 32px; 
    line-height: 48px;
}

.load-status {
    justify-content: center;
    align-items: center;
    height: 80px;
}

</style>

